<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gossip.proto

namespace Phluxor\Cluster\ProtoBuf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *a known key might be heartbeat. if we locally tag each entry with a local timestamp
 *this means that we can measure if we have not received a new heartbeat from one member in some time
 *even if we don't know the exact time the heartbeat was issued, due to clock differences.
 *we still know when _we_ as in this node, got this data.
 *and we can measure time from then til now.
 *if we got a hear-beat from another node, and X seconds pass, we can assume it to be dead
 *
 * Generated from protobuf message <code>cluster.GossipKeyValue</code>
 */
class GossipKeyValue extends \Google\Protobuf\Internal\Message
{
    /**
     *version is local to the owner member
     *
     * Generated from protobuf field <code>int64 sequence_number = 2;</code>
     */
    protected $sequence_number = 0;
    /**
     *value is any format
     *
     * Generated from protobuf field <code>.google.protobuf.Any value = 4;</code>
     */
    protected $value = null;
    /**
     * Generated from protobuf field <code>int64 local_timestamp_unix_milliseconds = 5;</code>
     */
    protected $local_timestamp_unix_milliseconds = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $sequence_number
     *          version is local to the owner member
     *     @type \Google\Protobuf\Any $value
     *          value is any format
     *     @type int|string $local_timestamp_unix_milliseconds
     * }
     */
    public function __construct($data = NULL) {
        \Phluxor\Cluster\Metadata\ProtoBuf\Gossip::initOnce();
        parent::__construct($data);
    }

    /**
     *version is local to the owner member
     *
     * Generated from protobuf field <code>int64 sequence_number = 2;</code>
     * @return int|string
     */
    public function getSequenceNumber()
    {
        return $this->sequence_number;
    }

    /**
     *version is local to the owner member
     *
     * Generated from protobuf field <code>int64 sequence_number = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSequenceNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->sequence_number = $var;

        return $this;
    }

    /**
     *value is any format
     *
     * Generated from protobuf field <code>.google.protobuf.Any value = 4;</code>
     * @return \Google\Protobuf\Any|null
     */
    public function getValue()
    {
        return $this->value;
    }

    public function hasValue()
    {
        return isset($this->value);
    }

    public function clearValue()
    {
        unset($this->value);
    }

    /**
     *value is any format
     *
     * Generated from protobuf field <code>.google.protobuf.Any value = 4;</code>
     * @param \Google\Protobuf\Any $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Any::class);
        $this->value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 local_timestamp_unix_milliseconds = 5;</code>
     * @return int|string
     */
    public function getLocalTimestampUnixMilliseconds()
    {
        return $this->local_timestamp_unix_milliseconds;
    }

    /**
     * Generated from protobuf field <code>int64 local_timestamp_unix_milliseconds = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLocalTimestampUnixMilliseconds($var)
    {
        GPBUtil::checkInt64($var);
        $this->local_timestamp_unix_milliseconds = $var;

        return $this;
    }

}

