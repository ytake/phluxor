<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cluster.proto

namespace Phluxor\Cluster\ProtoBuf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *request response call from Identity actor sent to each member
 *asking what activations they hold that belong to the requester
 *
 * Generated from protobuf message <code>cluster.IdentityHandoverRequest</code>
 */
class IdentityHandoverRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.cluster.IdentityHandoverRequest.Topology current_topology = 1;</code>
     */
    protected $current_topology = null;
    /**
     * Generated from protobuf field <code>string address = 2;</code>
     */
    protected $address = '';
    /**
     * If the requester passes a delta topology, only return activations which would not be assigned to the member
     * in the previous topology.
     *
     * Generated from protobuf field <code>.cluster.IdentityHandoverRequest.Topology delta_topology = 3;</code>
     */
    protected $delta_topology = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology $current_topology
     *     @type string $address
     *     @type \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology $delta_topology
     *           If the requester passes a delta topology, only return activations which would not be assigned to the member
     *           in the previous topology.
     * }
     */
    public function __construct($data = NULL) {
        \Phluxor\Cluster\Metadata\ProtoBuf\Cluster::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.cluster.IdentityHandoverRequest.Topology current_topology = 1;</code>
     * @return \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology|null
     */
    public function getCurrentTopology()
    {
        return $this->current_topology;
    }

    public function hasCurrentTopology()
    {
        return isset($this->current_topology);
    }

    public function clearCurrentTopology()
    {
        unset($this->current_topology);
    }

    /**
     * Generated from protobuf field <code>.cluster.IdentityHandoverRequest.Topology current_topology = 1;</code>
     * @param \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology $var
     * @return $this
     */
    public function setCurrentTopology($var)
    {
        GPBUtil::checkMessage($var, \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology::class);
        $this->current_topology = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string address = 2;</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Generated from protobuf field <code>string address = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * If the requester passes a delta topology, only return activations which would not be assigned to the member
     * in the previous topology.
     *
     * Generated from protobuf field <code>.cluster.IdentityHandoverRequest.Topology delta_topology = 3;</code>
     * @return \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology|null
     */
    public function getDeltaTopology()
    {
        return $this->delta_topology;
    }

    public function hasDeltaTopology()
    {
        return isset($this->delta_topology);
    }

    public function clearDeltaTopology()
    {
        unset($this->delta_topology);
    }

    /**
     * If the requester passes a delta topology, only return activations which would not be assigned to the member
     * in the previous topology.
     *
     * Generated from protobuf field <code>.cluster.IdentityHandoverRequest.Topology delta_topology = 3;</code>
     * @param \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology $var
     * @return $this
     */
    public function setDeltaTopology($var)
    {
        GPBUtil::checkMessage($var, \Phluxor\Cluster\ProtoBuf\IdentityHandoverRequest\Topology::class);
        $this->delta_topology = $var;

        return $this;
    }

}

